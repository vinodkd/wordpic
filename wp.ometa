// see hard-earned-gyaan.txt for all the work that went into getting this to work.

ometa WordpicScanner {
  wordpic = "picture" name:n "{" statements:s "}"         -> [`wordpic,n,s],
  name = text,
  statements = statement+,

  statement = objdef | simple_statement,
  objdef = "object" name:name "{" objdefbody:body "}"     -> [`objectdef,name,body],
  simple_statement = obj_decln | rel_decln,

  objdefbody = simple_statement+,

  // docs dont talk about the ? operator, mail archive does: http://vpri.org/pipermail/ometa/2010-April/000242.html
  obj_decln = (name:n ":")? objtype:typ attrs?:attrs      -> [`object, typ, n, [`attrs, attrs]],
  rel_decln = name:opd1 opr:op name:opd2                  -> [op, opd1, opd2],
  
  objtype = "box"       | "square"  | "rect" 
            | "circle"  | "oval"    | "arc"   | "line" 
            | "image" 
            | "point"   | "link"    | 
            nqstring,
  attrs = "[" listOf('nvpair',","):attrs "]"              -> attrs,

  opr = "is"? ("above" | "below" | "left" | "right"
         | "n" | "north"  | "s" | "south"
         | "e" | "east"   | "w" | "west"
         | "ne" | "northeast" | "sw" | "southwest"
         | "nw" | "northwest" | "se" | "southeast"
         |">" | "<" | "smaller" | "bigger"
         |">>" | "<<" | "much smaller" | "much bigger"
        ):op  ("of" | "to" | "than")?                     -> op,
  nvpair = nqstring:name "=" text:value                   -> [`attr,name, value],

  text = spaces (qstring | nqstring):s                    ->s,
  
  //this takes care of comments too. copied from bs-ometa-compiler.txt
  space = ^space |fromTo('//','\n') | fromTo('/*','*/'), 
  
  qstring = fromTo('"','"'),
  nqstring = ('_' | '.' | letterOrDigit)+:ls              -> (ls.join(''))
}
/*
WordpicScanner.matchAll("picture bleh {
object blah {
ab:box [attrs] // a comment
xy:circle
k > m
}
}",'wordpic');
*/
WordpicScanner.matchAll('ab:box [attrs]','simple_statement');
//WordpicScanner.matchAll('ab:box','simple_statement');
//WordpicScanner.matchAll('ab > cd','simple_statement');

// added handy debugging tool from here:http://vpri.org/pipermail/ometa/2010-May/000281.html
// the sample below can currently be broken by adding a non-letter, non-digit char to any text to see this in action.

matchFailed = function (grammar, errorPos) {
  var lines = grammar.input.lst.split('\n');
  var pos = 0, l = 0;
  var msg = ["Execution error: input matching failed at position: " + errorPos];

  while (pos < errorPos) {
    var line = lines[l], length = line.length;
    if (pos + length >= errorPos) {
      var c = errorPos - pos;
      msg.push("  line:" + (l + 1) + ", column:" + c);
      msg.push(line)
      // replicate str n times
      function replicate(str, n) {
        if (n < 1) return "";
        var t = [];
        for (var i=0; i<n; i++) t.push(str);
        return t.join('');
      }
      msg.push(replicate('-', c) + '^');
    }
    pos += length + 1;
    l++;
  }
  alert(msg.join('\n'));
}


WordpicScanner.matchAll("picture \"Three tier arch\" {
          // todo: think of a better name than object. this is the exemplar object that you instantiate for your picture.
          object cylinder{
            bot:arc
            top:oval  
        
            top > bot
            top bigger bot
            top is bigger than bot
            top is much bigger than bot
            top bigger than bot
            top much bigger bot
            
            top is north of bot
            top is north bot
            top north bot
            top is south of bot
            top is west of bot
            top is east of bot
            top is northwest of bot
            top is northeast of bot
            top is southwest of bot
            top is southeast of bot
            top n bot
            top s bot
            top e bot
            top w bot
            top ne bot
            top nw bot
            top se bot
            top sw bot
            
            lt:line[from=top.e,to=bot.e]
            rt:line[from=top.w,to=bot.w]
          }
          
          client:box[color=green] //default label is the name.
          server:box[color=blue]
          db:cylinder[color=red]
          
          l1:link[from=client,to=server]
          link[from=server,to=db]
          // also can be written as
          // client -- server -- db
        }",'wordpic',[],matchFailed);
